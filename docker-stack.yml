version: '3.1'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  monitor-net:
  
secrets:
  aws_creds:
    external: true

services:

  prometheus:
    image: prom/prometheus:v2.15.2
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - monitor-net
    restart: always
    deploy:
      placement:
        constraints:
          - node.role==manager

  node-exporter:
    image: prom/node-exporter:v0.18.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
      - --collector.textfile.directory
      - "/rootfs/node_exporter/textfile_collector"
    ports:
      - 9100:9100
    networks:
      - monitor-net
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:v0.20.0
    ports:
      - 9093:9093
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    networks:
      - monitor-net
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager

  art_scraper:
    image: emillime/artscraper:latest
    build: # build is ignored by docker stack.
      context: ./artscraper/
      dockerfile: Dockerfile
    secrets:
      - source: aws_creds
        target: /root/.aws/credentials
        uid: '1000'
        gid: '1000'
        mode: 0700
    ports:
      - 6080:6080
      - 5666:5666
    volumes:
      - "./data:/artscraper/data"
    networks:
      - monitor-net
    restart: always
    deploy:
      mode: global

  cadvisor:
    image: emilime/cadvisor:arm64-v0.36.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - 8080:8080
    networks:
      - monitor-net
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana:6.5.3
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - monitor-net
    restart: always
    deploy:
      placement:
        constraints:
          - node.role==manager

